<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.police.testing.dao.RolePermissionMapper" >
  <resultMap id="BaseResultMap" type="com.police.testing.pojo.RolePermission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="menu_id" property="menuId" jdbcType="INTEGER" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, permission, description, menu_id, menu_name, available
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from role_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from role_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.police.testing.pojo.RolePermission" >
    insert into role_permission (id, role_name, permission, 
      description, menu_id, menu_name, 
      available)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{menuId,jdbcType=INTEGER}, #{menuName,jdbcType=VARCHAR}, 
      #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.police.testing.pojo.RolePermission" >
    insert into role_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.police.testing.pojo.RolePermission" >
    update role_permission
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.police.testing.pojo.RolePermission" >
    update role_permission
    set role_name = #{roleName,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      menu_id = #{menuId,jdbcType=INTEGER},
      menu_name = #{menuName,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>